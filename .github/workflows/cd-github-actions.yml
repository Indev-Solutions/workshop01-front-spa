name: ReactJS CD
run-name: ${{ github.actor }} is starting the execution of frontend pipeline "ReactJS CD" with GitHub Actions
on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
env:
  AWS_REGION: us-east-1
jobs:
  deploy:
    name: 'Front CD'
    runs-on: ubuntu-latest
    environment: PRO
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node 17 for x64
        uses: actions/setup-node@v4
        with:
          node-version: '20.9.0'
          architecture: 'x64'
          registry-url: https://npm.pkg.github.com/
      - name: Install Node Modules
        run: npm install
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
      - name: Execute Terraform Init
        working-directory: deploy
        run: terraform init
      - name: Select Terraform Workspace
        working-directory: deploy
        run: terraform workspace select -or-create=true workshop1-pro-spa
      - name: Execute Terraform Apply
        working-directory: deploy
        run: terraform apply -var="region=${{ env.AWS_REGION }}" -auto-approve
      - name: Get Endpoint of MicroService Bet
        working-directory: deploy
        run: |
          echo "ENDPOINT_MICROSERVICE_BET=$(terraform output -raw apigateway_endpoint_msbet)" >> "$GITHUB_ENV"
      - name: Get Endpoint of MicroService Play
        working-directory: deploy
        run: |
          echo "ENDPOINT_MICROSERVICE_PLAY=$(terraform output -raw apigateway_endpoint_msplay)" >> "$GITHUB_ENV"
      - name: Get S3 Bucket Name of Simple Page Application
        working-directory: deploy
        run: |
          echo "S3_BUCKET_NAME_SPA=$(terraform output -raw s3_bucket_name_spa)" >> "$GITHUB_ENV"
      - name: Get Access Token of AWS Cognito
        run: |
          echo "AWS_COGNITO_ACCESS_TOKEN=$(aws cognito-idp initiate-auth --auth-flow USER_PASSWORD_AUTH --auth-parameters USERNAME=${{ secrets.AWS_COGNITO_USERNAME }},PASSWORD=${{ secrets.AWS_COGNITO_PASSWORD }},SECRET_HASH=${{ secrets.AWS_COGNITO_SECRET_HASH }} --client-id ${{ secrets.AWS_COGNITO_CLIENT_ID }} --output text --query 'AuthenticationResult.AccessToken')" >> "$GITHUB_ENV"
      - name: Update Environment Variables
        run: echo -e "NEXT_PUBLIC_PREFIX_ENDPOINT_MICROSERVICE_BET=$ENDPOINT_MICROSERVICE_BET\nNEXT_PUBLIC_PREFIX_ENDPOINT_MICROSERVICE_PLAY=$ENDPOINT_MICROSERVICE_PLAY\nNEXT_PUBLIC_TOKEN_AWS_COGNITO=$AWS_COGNITO_ACCESS_TOKEN\n" > .env.production
      - name: Generate Static Content
        run: npm run build
      - name: Upload Static Content to S3
        run: aws s3 cp out s3://$S3_BUCKET_NAME_SPA/ --recursive
      - name: Publish Front Component
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Send Message to Slack
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        with:
          payload: |
            {
              "text": "The execution of frontend pipeline 'ReactJS CD' with GitHub Actions have finished"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
